//////////////////////
// DATA VALIDATIONS //
//////////////////////
// 1. Do a take 10 to inspect the output.
// 2. If any columns are blank or suspect, verify that they are blank on both systems (LAW vs ADX).
// 3. If any colums are dynamic/complex strings, verify they have the same number of json fields, etc for the same timestamp (timegenerated) across both systems (LAW vs ADX).
// 4. Verify that the table has the same count for a given time window, ie. several 10-30m, few-24 hours, 1-3 days - same count across both systems (LAW vs ADX).


// inspect output is similar across both systems. inspect values if any appear suspect (blank/dynamic/complex strings) to drill into.
BehaviorAnalytics
| where TimeGenerated >= ago(1h)
| take 10

// verify count of columns are the same in LAW vs ADX. 
BehaviorAnalytics
| where TimeGenerated >= ago(1h)
| take 10
| getschema
| count

// drilling into suspects.
BehaviorAnalytics
| where TimeGenerated between (datetime(2025-07-13 00:00:00) .. datetime(2025-7-14 00:00:00))
| project TimeGenerated, DestinationIPAddress, DestinationIPLocation, DestinationDevice
| where isnotempty(DestinationIPAddress)
| take 10
 
BehaviorAnalytics
| summarize count() by DestinationIPAddress, DestinationIPLocation, DestinationDevice


// drill into a suspect record to check if matches across both systems. 
BehaviorAnalytics
| where TimeGenerated between ( datetime('7/14/2025 05:42:08.621')..datetime('7/14/2025 05:42:09.621') )
| project TimeGenerated, ActivityInsights
| take 10
 

// check latest ingested record. may differ 2-3mins across LAW vs ADX for exported tables.
BehaviorAnalytics
| summarize max(ingestion_time())
 

// get a time range for counts
print dt = now()-5m, et = now()-3m
| project st = dt - 24h, et

// paste and format time range, this count must be identical across both systems.
BehaviorAnalytics
| where TimeGenerated between (datetime('7/12/2025 2:50:54.000') .. datetime('7/14/2025 2:52:54.000') ) 
| count



////////////////////////
// POLICY VALIDATIONS //
////////////////////////
1. 
