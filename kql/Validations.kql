//////////////////////
// DATA VALIDATIONS //
//////////////////////
// 1. Do a take 10 to inspect the output.
// 2. If any columns are blank or suspect, verify that they are blank on both systems (LAW vs ADX).
// 3. If any colums are dynamic/complex strings, verify they have the same number of json fields, etc for the same timestamp (timegenerated) across both systems (LAW vs ADX).
// 4. Verify that the table has the same count for a given time window, ie. several 10-30m, few-24 hours, 1-3 days - same count across both systems (LAW vs ADX).


// inspect output is similar across both systems. inspect values if any appear suspect (blank/dynamic/complex strings) to drill into.
BehaviorAnalytics
| where TimeGenerated >= ago(1h)
| take 10

// if target is yet empty, check if raw has records. 
BehaviorAnalyticsRaw
| where TimeGenerated >= ago(1h)
| take 10

// verify count of columns are the same in LAW vs ADX. 
BehaviorAnalytics
| where TimeGenerated >= ago(1h)
| take 10
| getschema
| count

// drilling into suspects.
BehaviorAnalytics
| where TimeGenerated between (datetime(2025-07-13 00:00:00) .. datetime(2025-7-14 00:00:00))
| project TimeGenerated, DestinationIPAddress, DestinationIPLocation, DestinationDevice
| where isnotempty(DestinationIPAddress)
| take 10

BehaviorAnalytics
| summarize count() by DestinationIPAddress, DestinationIPLocation, DestinationDevice

BehaviorAnalytics
| where TimeGenerated between (datetime(2025-07-13 00:00:00) .. datetime(2025-7-14 00:00:00))
| summarize count() by DestinationIPAddress, DestinationIPLocation, DestinationDevice
| sort by count_ desc
| top 10 by count_

// drill into a suspect record to check if matches across both systems. 
BehaviorAnalytics
| where TimeGenerated between ( datetime('7/14/2025 05:42:08.621')..datetime('7/14/2025 05:42:09.621') )
| project TimeGenerated, ActivityInsights
| take 10
 

// check latest ingested record. may differ 2-3mins across LAW vs ADX for exported tables.
BehaviorAnalytics
| summarize max(ingestion_time())
 

// get a time range for counts
print dt = now()-5m, et = now()-3m
| project st = dt - 24h, et

// paste and format time range, this count must be identical across both systems.
BehaviorAnalytics
| where TimeGenerated between (datetime('7/12/2025 2:50:54.000') .. datetime('7/14/2025 2:52:54.000') ) 
| count



////////////////////////////
// ADX POLICY VALIDATIONS //
////////////////////////////
// 1. Retention
// 2. Cache
// 3. Update policy
// 4. Ingestion failures

//db settings
.show database MyDatabase policy retention //30months (931d)
.show database MyDatabase policy caching //12months (365d)

//all tables
//raw: 7d cold, 1d hot, target: 30months cold, 12months hot. streaming enabled for clus.
.show tables details | project TableName, RetentionPolicy, CachingPolicy, StreamingIngestionPolicy, TotalRowCount, HotRowCount

//per table retention 
.show table BehaviorAnalytics policy retention  //blank, therefore inherits db policy or explictly set to 30 nonths

.show table BehaviorAnalyticsRaw policy retention  //7d

//per table cache
.show table BehaviorAnalytics policy caching //12months

.show table BehaviorAnalyticsRaw policy caching //1d

.show table BehaviorAnalytics extents  // should show hot extents

//update policies
.show table * policy update

//Update policies as transact, should be none.
.show table * policy update
| where Policy has '"IsTransactional": true'

.show table * policy update
| project EntityName,todynamic(Policy)
| extend EntityName, IsTransactional = Policy[0].IsTransactional
//| where IsTransactional != 'false'
| where IsTransactional == 'true'

//monitor failures
.show ingestion failures 
| where Table == "BehaviorAnalytics"
| sort by FailedOn desc
| top 10 by FailedOn

.show diagnostics

.show diagnostics
| project HotDataDiskSpaceUsage

.show tables details
| summarize HotExtentSize=format\_bytes(sum(HotOriginalSize),2)

//If needed, see perf metrics via additional system views. https://learn.microsoft.com/en-us/kusto/management/show-commands

//////////////
// SETTINGS // // validate via Azure portal, not via KQL.
//////////////
0. Review ADX Insights Blade for metrics, Azure Advisor, Streaming, VM Sku, node count, optimized auto-scale, enabled diags.
1. Hub partitions should be 8+
2. Hub namespace is prem/stand â€“ sku, +2 PUs, 
3. Hub namespace has at least 10 hubs. This is due to LAW Export limits. http://aka.ms/LADataExport#limitations
4. Check Hub namespace metrics for requests (> 0 is good) 
5. Check Hub namespace hrottling (> 0 is not good).
